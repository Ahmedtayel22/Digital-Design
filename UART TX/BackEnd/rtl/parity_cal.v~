module UART_parity_calc
  (
  input wire [7:0] P_DATA,
  input wire PAR_TYP,
  input wire enable_p,
  input wire CLK,
  input wire RST,
  output reg par_bit
  );
  reg value;
  reg [7:0] memory;

  parameter even = 0;
  parameter odd = 1;
  
  always@(posedge CLK or negedge RST)
  begin
    if(!RST)
    begin
      par_bit <= 0;
    end
    else if ((enable_p == 1'b1))
      begin
        memory = P_DATA;
        value = ^memory;
        case (PAR_TYP)
        even:
        begin
          if(value==1'b0)
          begin
            par_bit = 1'b0;
          end
          else
          begin
           par_bit = 1'b1;
          end 
          end
        odd:
        begin
          if(value==1'b1)
          begin
            par_bit = 1'b0;
          end
          else
          begin
            par_bit = 1'b1;
          end 
        end
    endcase
      end 
  end
endmodule